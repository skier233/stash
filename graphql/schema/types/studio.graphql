type Studio {
  id: ID!
  checksum: String!
  name: String!
  url: String
  parent_studio: Studio
  child_studios: [Studio!]!
  aliases: [String!]!
  ignore_auto_tag: Boolean!

  image_path: String # Resolver
  scene_count: Int # Resolver
  image_count: Int # Resolver
  gallery_count: Int # Resolver
  stash_ids: [StashID!]!
  # rating expressed as 1-5
  rating: Int @deprecated(reason: "Use 1-100 range with rating100")
  # rating expressed as 1-100
  rating100: Int
  details: String
  created_at: Time!
  updated_at: Time!
  movie_count: Int
  movies: [Movie!]!
}

input StudioCreateInput {
  name: String!
  url: String
  parent_id: ID
  """This should be a URL or a base64 encoded data URL"""
  image: String
  stash_ids: [StashIDInput!]
  # rating expressed as 1-5
  rating: Int @deprecated(reason: "Use 1-100 range with rating100")
  # rating expressed as 1-100
  rating100: Int
  details: String
  aliases: [String!]
  ignore_auto_tag: Boolean
}

input StudioUpdateInput {
  id: ID!
  name: String
  url: String
  parent_id: ID,
  """This should be a URL or a base64 encoded data URL"""
  image: String
  stash_ids: [StashIDInput!]
  # rating expressed as 1-5
  rating: Int @deprecated(reason: "Use 1-100 range with rating100")
  # rating expressed as 1-100
  rating100: Int
  details: String
  aliases: [String!]
  ignore_auto_tag: Boolean
}

input StudioDestroyInput {
  id: ID!
}

type FindStudiosResultType {
  count: Int!
  studios: [Studio!]!
}
